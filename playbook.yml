- hosts: all
  become: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"
    username: lucas3

  handlers:
   - name: restart host
     reboot:
   #  Handlers will run once, and only once, at the end of a play. 





  tasks:
  - name: "Install Packages"
    apt:
      name: "{{ item }}"
      update_cache: yes
    with_items:
      - "git"
      - "zip"
      - "unzip"
      - "vim"
      - "curl"
      - "wget"
      - "maven"


  - name: Easy Install
    apt:
      name: python-setuptools
      state: present


  - name: "Install pip"
    apt:
      name: "{{ item }}"
      update_cache: yes
    with_items:
      - "python3-pip"
      - "python-dev"
      - "build-essential"


  - name: "Install awscli"
    pip:
     name: "awscli"



  - name: Install add-apt-repostory
    become: yes
    apt: name=software-properties-common state=latest

  - name: Add Oracle Java Repository
    become: yes
    apt_repository: repo='ppa:webupd8team/java'

  - name: Accept Java 8 License
    become: yes
    debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

  - name: Install Oracle Java 8
    become: yes
    apt: name={{item}} state=latest
    with_items:
      - oracle-java8-installer
      - ca-certificates
      - oracle-java8-set-default




  - name: "APT - Add Docker GPG key"
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: "APT - Add Docker repository"
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      state: present
      filename: docker

  - name: "APT - install misc packages"
    apt:
      name: "{{ item }}"
      update_cache: yes
    with_items:
      - "aptitude"
      - "apt-transport-https"
      - "ca-certificates"
      - "curl"
      - "software-properties-common"

  - name: "APT - install 'docker-ce'"
    apt:
      name: "docker-ce"
      update_cache: yes

  - name: "Add user to docker group"
    command:  usermod -aG docker $USER
    notify: 
       - restart host


  - name: pip install docker-py
    pip:
      name: docker-py


  - name: Ensure group "somegroup" exists
    group:
      name: "{{ username }}"
      state: present

  - name: Create a login user
    user:
      name: "{{ username }}"
      password: "{{ username | password_hash('sha512') }}"
      groups: # Empty by default
       - docker
       - sudo
       - adm
       - cdrom
       - dip
       - plugdev
       - lpadmin
       - sambashare
       - "{{username}}"
      state: present
      shell: /bin/bash       # Defaults to /bin/bash
      system: no             # Defaults to no
      createhome: yes        # Defaults to yes
      home: "/home/{{ username }}"  # Defaults to /home/<username>


















